/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GymBookingSystem;

import java.time.LocalTime;
import java.time.format.DateTimeFormatter;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JOptionPane;

/**
 *
 * @author ooikn
 */
public class UpdateBooking extends javax.swing.JFrame {
    private String memberId; // store the memberId of currently logged in member
    private BookingList bookingList;
    /**
     * Creates new form UpdateBooking
     */
    public UpdateBooking(String memberId) {
        this.memberId = memberId; // initialize memberId of member logged in
        initComponents();
        
        // restrict booking of previous and current dates
        Calendar calendar = Calendar.getInstance();
        calendar.add(Calendar.DATE, 1); // add one day to today date
        //member can only book at least one day before
        dateChooser.setMinSelectableDate(calendar.getTime()); 
        
        //create instance of BookingList to manage bookings
        bookingList = new BookingList();
        disableEditing(); // initially disable fields
        setLocationRelativeTo(null);
    }
    
    private void disableEditing(){
        dateChooser.setEnabled(false);
        startTimeCb.setEnabled(false);
        endTimeCb.setEnabled(false);
        saveBtn.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        bookingIdTf = new javax.swing.JTextField();
        searchBtn = new javax.swing.JButton();
        dateChooser = new com.toedter.calendar.JDateChooser();
        startTimeCb = new javax.swing.JComboBox<>();
        endTimeCb = new javax.swing.JComboBox<>();
        resetBtn = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        saveBtn = new javax.swing.JButton();
        exitBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Update Booking Form");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Update Booking");

        jLabel5.setText("Select End Time:");

        searchBtn.setText("Search");
        searchBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBtnActionPerformed(evt);
            }
        });

        startTimeCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select start time", "10:00", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00" }));

        endTimeCb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select end time", "11:00", "12:00", "13:00", "14:00", "15:00", "16:00", "17:00", "18:00" }));

        resetBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        resetBtn.setText("Reset");
        resetBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetBtnActionPerformed(evt);
            }
        });

        jLabel2.setText("Enter Booking ID:");

        jLabel3.setText("Select Date:");

        jLabel4.setText("Select Start Time:");

        saveBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        saveBtn.setText("Save");
        saveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveBtnActionPerformed(evt);
            }
        });

        exitBtn.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        exitBtn.setText("Exit");
        exitBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(33, 33, 33)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(dateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(startTimeCb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(endTimeCb, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(bookingIdTf, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(searchBtn)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 24, Short.MAX_VALUE)
                        .addComponent(exitBtn)
                        .addGap(18, 18, 18)
                        .addComponent(resetBtn)
                        .addGap(18, 18, 18)
                        .addComponent(saveBtn)
                        .addGap(66, 66, 66))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(0, 18, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(bookingIdTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBtn))
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(startTimeCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(endTimeCb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(saveBtn)
                    .addComponent(resetBtn)
                    .addComponent(exitBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(10, 10, 10))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(123, 123, 123)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveBtnActionPerformed
        // check if booking id text field is empty
        if(bookingIdTf.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "Please enter booking id for update!");
        }
        // check if any other fields are empty
        else if(dateChooser.getDate() == null || startTimeCb.getSelectedIndex() == 0 || endTimeCb.getSelectedIndex() == 0){
            JOptionPane.showMessageDialog(this, "Please fill in all field!");
        }
        //check if the start time is after the end time
        else if(startTimeCb.getSelectedIndex() > endTimeCb.getSelectedIndex()){
            JOptionPane.showMessageDialog(this, "Start time must be before end time!");
        }
        //every fields are filled in
        else{
            String bookingId = bookingIdTf.getText();
            
            //Check if the booking exist in the array list
            Booking existingBooking = bookingList.searchBooking(bookingId);
            
            // if the booking exist and it belongs to the member logged in
            if (existingBooking != null && existingBooking.getMemberId().equals(memberId)) {
                // get all the fields
                Date selectedDate = dateChooser.getDate();

                String startTimeStr = (String) startTimeCb.getSelectedItem();
                String endTimeStr = (String) endTimeCb.getSelectedItem();
                
                //set the format to hour:minute abd parse the time String to LocalTime
                DateTimeFormatter format = DateTimeFormatter.ofPattern("HH:mm");
                LocalTime startTime = LocalTime.parse(startTimeStr, format);
                LocalTime endTime = LocalTime.parse(endTimeStr, format);
                
                // check for time clash
                if (bookingList.hasTimeClash(memberId, selectedDate, startTime, endTime, bookingId)) {
                    JOptionPane.showMessageDialog(this, "Time clash with existing booking! Please choose another time slot.");
                    return;
                }
                
                GymEquipmentBooking callWithoutPrice = new GymEquipmentBooking(memberId, bookingId, selectedDate, startTime, endTime); //
                callWithoutPrice.calculateTotalPrice();
                
                double totalPrice = ((GymEquipmentBooking) callWithoutPrice).getTotalPrice();
                // create a new booking object with the updated details
                Booking updateBooking = new GymEquipmentBooking(memberId, bookingId, selectedDate, startTime, endTime, totalPrice);
                
                // perform update 
                bookingList.updateBooking(updateBooking);

                JOptionPane.showMessageDialog(this, "Booking updated successfully!");
                disableEditing(); // disable editing again after update
                
                //reset the fields
                bookingIdTf.setText("");
                dateChooser.setDate(null); 
                startTimeCb.setSelectedIndex(0); 
                endTimeCb.setSelectedIndex(0);
            }
        }
    }//GEN-LAST:event_saveBtnActionPerformed

    private void resetBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetBtnActionPerformed
        bookingIdTf.setText("");
        dateChooser.setDate(null);
        startTimeCb.setSelectedIndex(0);
        endTimeCb.setSelectedIndex(0);
    }//GEN-LAST:event_resetBtnActionPerformed

    private void searchBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBtnActionPerformed
        if(bookingIdTf.getText().isEmpty()){ // no booking id entered
            JOptionPane.showMessageDialog(this, "Please enter booking id for display!");
        }
        else{ // booking id entered
            String bookingId = bookingIdTf.getText(); 
            Booking booking = bookingList.searchBooking(bookingId); // search booking with the booking Id to display in form
            
            // booking exist
            if (booking != null) { 
                // set the details of the respective bookingId
                dateChooser.setDate(booking.getDate());
                DateTimeFormatter timeFormat = DateTimeFormatter.ofPattern("HH:mm");
                startTimeCb.setSelectedItem(booking.getStartTime().format(timeFormat));
                endTimeCb.setSelectedItem(booking.getEndTime().format(timeFormat));
                
                // enable editing after the fields are set
                dateChooser.setEnabled(true);
                startTimeCb.setEnabled(true);
                endTimeCb.setEnabled(true);
                saveBtn.setEnabled(true); 
            } 
            //booking not exist
            else { 
                JOptionPane.showMessageDialog(this, "Booking not found");
            }
        }
    }//GEN-LAST:event_searchBtnActionPerformed

    private void exitBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitBtnActionPerformed
        this.dispose();
    }//GEN-LAST:event_exitBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UpdateBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UpdateBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UpdateBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UpdateBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateBooking("B001").setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bookingIdTf;
    private com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JComboBox<String> endTimeCb;
    private javax.swing.JButton exitBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton resetBtn;
    private javax.swing.JButton saveBtn;
    private javax.swing.JButton searchBtn;
    private javax.swing.JComboBox<String> startTimeCb;
    // End of variables declaration//GEN-END:variables
}
